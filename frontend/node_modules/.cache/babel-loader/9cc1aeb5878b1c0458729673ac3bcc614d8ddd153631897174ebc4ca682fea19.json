{"ast":null,"code":"var _jsxFileName = \"/Users/luluroh/Desktop/zogakzip/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useMemo } from \"react\";\nimport MemoryList from \"./MemoryList\";\nimport items from \"../mock.json\";\nimport Dropdown from \"./DropdownMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [order, setOrder] = useState(\"createdAt\");\n  const sortedItems = useMemo(() => {\n    return [...items].sort((a, b) => {\n      if (order === \"createdAt\") {\n        return new Date(b.createdAt) - new Date(a.createdAt);\n      } else if (order === \"titleCount\") {\n        return (titleCount[b.title] || 0) - (titleCount[a.title] || 0);\n      } else if (order === \"likes\") {\n        return b.likes - a.likes;\n      } else if (order === \"badges\") {\n        return b.badges - a.badges;\n      }\n      return 0;\n    });\n  }, [order]);\n  const handleSelect = option => {\n    if (option === \"최신순\") setOrder(\"createdAt\");else if (option === \"게시글 많은순\") setOrder(\"titleCount\");else if (option === \"공감순\") setOrder(\"likes\");else if (option === \"획득 배지순\") setOrder(\"achievedBadges\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      options: [\"최신순\", \"게시글 많은순\", \"공감순\", \"획득 배지순\"],\n      onSelect: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MemoryList, {\n      items: sortedItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9sqGe0MZxi7UFdvWvv/SQcH/MyA=\");\n_c = App;\nexport default App;\n\n/*\nimport { useState } from \"react\";\nimport MemoryList from \"./MemoryList\";\nimport items from \"../mock.json\";\n\nfunction App() {\n  const [order, setOrder] = useState(\"createdAt\");\n  const SortedItems = items.sort((a, b) => b.order - a.order);\n\n  const handleNewestClick = () => setOrder(\"createdAt\");\n\n  const handleBestClick = () => setOrder(\"badges\");\n\n  return (import { useState, useMemo } from \"react\";\nimport MemoryList from \"./MemoryList\";\nimport items from \"../mock.json\";\nimport Dropdown from \"./Dropdown\";\n\nfunction App() {\n  const [order, setOrder] = useState(\"createdAt\");\n\n  const sortedItems = useMemo(() => {\n    return [...items].sort((a, b) => {\n      if (order === \"createdAt\") {\n        return new Date(b.createdAt) - new Date(a.createdAt);\n      } else if (order === \"badges\") {\n        return b.badges - a.badges;\n      } else if (order === \"likes\") {\n        return b.likes - a.likes;\n      } else if (order === \"achievedBadges\") {\n        return b.achievedBadges - a.achievedBadges;\n      }\n      return 0;\n    });\n  }, [order]);\n\n  const handleSelect = (option) => {\n    if (option === \"최신순\") setOrder(\"createdAt\");\n    else if (option === \"게시글 많은순\") setOrder(\"badges\");\n    else if (option === \"공감순\") setOrder(\"likes\");\n    else if (option === \"획득 배지순\") setOrder(\"achievedBadges\");\n  };\n\n  return (\n    <div>\n      <Dropdown\n        options={[\"최신순\", \"게시글 많은순\", \"공감순\", \"획득 배지순\"]}\n        onSelect={handleSelect}\n      />\n      <MemoryList items={sortedItems} />\n    </div>\n  );\n}\n\nexport default App;\n\n    <div>\n      <div>\n        <DropdownBtn onClick={handleNewestClick}>최신순</button>\n        <button onClick={handleBestClick}>게시글 많은순</button>\n        <button onClick={handleBestClick}>공감순</button>\n        <button onClick={handleBestClick}>획득 배지순</button>\n      </div>\n      <MemoryList items={SortedItems} />\n    </div>\n  );\n}\nexport default App;\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useMemo","MemoryList","items","Dropdown","jsxDEV","_jsxDEV","App","_s","order","setOrder","sortedItems","sort","a","b","Date","createdAt","titleCount","title","likes","badges","handleSelect","option","children","options","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luluroh/Desktop/zogakzip/src/components/App.js"],"sourcesContent":["import { useState, useMemo } from \"react\";\nimport MemoryList from \"./MemoryList\";\nimport items from \"../mock.json\";\nimport Dropdown from \"./DropdownMenu\";\n\nfunction App() {\n  const [order, setOrder] = useState(\"createdAt\");\n\n  const sortedItems = useMemo(() => {\n    return [...items].sort((a, b) => {\n      if (order === \"createdAt\") {\n        return new Date(b.createdAt) - new Date(a.createdAt);\n      } else if (order === \"titleCount\") {\n        return (titleCount[b.title] || 0) - (titleCount[a.title] || 0);\n      } else if (order === \"likes\") {\n        return b.likes - a.likes;\n      } else if (order === \"badges\") {\n        return b.badges - a.badges;\n      }\n      return 0;\n    });\n  }, [order]);\n\n  const handleSelect = (option) => {\n    if (option === \"최신순\") setOrder(\"createdAt\");\n    else if (option === \"게시글 많은순\") setOrder(\"titleCount\");\n    else if (option === \"공감순\") setOrder(\"likes\");\n    else if (option === \"획득 배지순\") setOrder(\"achievedBadges\");\n  };\n\n  return (\n    <div>\n      <Dropdown\n        options={[\"최신순\", \"게시글 많은순\", \"공감순\", \"획득 배지순\"]}\n        onSelect={handleSelect}\n      />\n      <MemoryList items={sortedItems} />\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nimport { useState } from \"react\";\nimport MemoryList from \"./MemoryList\";\nimport items from \"../mock.json\";\n\nfunction App() {\n  const [order, setOrder] = useState(\"createdAt\");\n  const SortedItems = items.sort((a, b) => b.order - a.order);\n\n  const handleNewestClick = () => setOrder(\"createdAt\");\n\n  const handleBestClick = () => setOrder(\"badges\");\n\n  return (import { useState, useMemo } from \"react\";\nimport MemoryList from \"./MemoryList\";\nimport items from \"../mock.json\";\nimport Dropdown from \"./Dropdown\";\n\nfunction App() {\n  const [order, setOrder] = useState(\"createdAt\");\n\n  const sortedItems = useMemo(() => {\n    return [...items].sort((a, b) => {\n      if (order === \"createdAt\") {\n        return new Date(b.createdAt) - new Date(a.createdAt);\n      } else if (order === \"badges\") {\n        return b.badges - a.badges;\n      } else if (order === \"likes\") {\n        return b.likes - a.likes;\n      } else if (order === \"achievedBadges\") {\n        return b.achievedBadges - a.achievedBadges;\n      }\n      return 0;\n    });\n  }, [order]);\n\n  const handleSelect = (option) => {\n    if (option === \"최신순\") setOrder(\"createdAt\");\n    else if (option === \"게시글 많은순\") setOrder(\"badges\");\n    else if (option === \"공감순\") setOrder(\"likes\");\n    else if (option === \"획득 배지순\") setOrder(\"achievedBadges\");\n  };\n\n  return (\n    <div>\n      <Dropdown\n        options={[\"최신순\", \"게시글 많은순\", \"공감순\", \"획득 배지순\"]}\n        onSelect={handleSelect}\n      />\n      <MemoryList items={sortedItems} />\n    </div>\n  );\n}\n\nexport default App;\n\n    <div>\n      <div>\n        <DropdownBtn onClick={handleNewestClick}>최신순</button>\n        <button onClick={handleBestClick}>게시글 많은순</button>\n        <button onClick={handleBestClick}>공감순</button>\n        <button onClick={handleBestClick}>획득 배지순</button>\n      </div>\n      <MemoryList items={SortedItems} />\n    </div>\n  );\n}\nexport default App;\n*/\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,cAAc;AAChC,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,WAAW,CAAC;EAE/C,MAAMW,WAAW,GAAGV,OAAO,CAAC,MAAM;IAChC,OAAO,CAAC,GAAGE,KAAK,CAAC,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC/B,IAAIL,KAAK,KAAK,WAAW,EAAE;QACzB,OAAO,IAAIM,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC;MACtD,CAAC,MAAM,IAAIP,KAAK,KAAK,YAAY,EAAE;QACjC,OAAO,CAACQ,UAAU,CAACH,CAAC,CAACI,KAAK,CAAC,IAAI,CAAC,KAAKD,UAAU,CAACJ,CAAC,CAACK,KAAK,CAAC,IAAI,CAAC,CAAC;MAChE,CAAC,MAAM,IAAIT,KAAK,KAAK,OAAO,EAAE;QAC5B,OAAOK,CAAC,CAACK,KAAK,GAAGN,CAAC,CAACM,KAAK;MAC1B,CAAC,MAAM,IAAIV,KAAK,KAAK,QAAQ,EAAE;QAC7B,OAAOK,CAAC,CAACM,MAAM,GAAGP,CAAC,CAACO,MAAM;MAC5B;MACA,OAAO,CAAC;IACV,CAAC,CAAC;EACJ,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;EAEX,MAAMY,YAAY,GAAIC,MAAM,IAAK;IAC/B,IAAIA,MAAM,KAAK,KAAK,EAAEZ,QAAQ,CAAC,WAAW,CAAC,CAAC,KACvC,IAAIY,MAAM,KAAK,SAAS,EAAEZ,QAAQ,CAAC,YAAY,CAAC,CAAC,KACjD,IAAIY,MAAM,KAAK,KAAK,EAAEZ,QAAQ,CAAC,OAAO,CAAC,CAAC,KACxC,IAAIY,MAAM,KAAK,QAAQ,EAAEZ,QAAQ,CAAC,gBAAgB,CAAC;EAC1D,CAAC;EAED,oBACEJ,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACF,QAAQ;MACPoB,OAAO,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAE;MAC7CC,QAAQ,EAAEJ;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvB,OAAA,CAACJ,UAAU;MAACC,KAAK,EAAEQ;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEV;AAACrB,EAAA,CAlCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoCZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}